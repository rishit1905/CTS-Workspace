package com.cts.controller;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.cts.entity.Category;
import com.cts.entity.Product;
import com.cts.entity.SubCategory;
import com.cts.service.SearchItemService;



@RestController
@RequestMapping("update")
public class SearchItemController {

	@Autowired
	SearchItemService service;
	
	@RequestMapping("/all")
	List<Product> getAllProducts(){
		return service.getAllProducts();
	}
	
	
	@RequestMapping(method = RequestMethod.POST, value = "/product/{categoryId}/{subCategoryId}")
	void addProduct(@RequestBody Product product, @PathVariable int categoryId, @PathVariable int subCategoryId ) {
		product.setSubCategory(new SubCategory(subCategoryId));
		product.setCategory(new Category(categoryId));
		service.addProduct(product);
	}
	
	@RequestMapping(method = RequestMethod.PUT,value = "/products")
	void updateProducts(@RequestBody Product product) {
		 service.updateProducts(product);
	}
	@RequestMapping(method = RequestMethod.DELETE,value = "/products/delete/{id}")
	void deleteProduct(@PathVariable int id) {
		service.deleteProduct(id);
	}
	
	@RequestMapping("/products/{id}")
	Optional<Product> searchById(@PathVariable Integer id){
		return service.searchById(id);
	}
	
	@RequestMapping("/product/products/{productName}")
	Product searchByName(@PathVariable String productName){
		return service.searchByName(productName);
	}

	@RequestMapping("/{categoryName}")
	List<Product> searchByCategory(@PathVariable String categoryName){
		return (List<Product>) service.searchByCategory(categoryName);
	}
	
	@RequestMapping("/category/{subCategoryName}")
	List<Product> searchBySubCategory(@PathVariable String subCategoryName){
		return (List<Product>) service.searchBySubCategory(subCategoryName);
	}
	

	@RequestMapping("/products/stock/{id}")
	int getStock(@PathVariable int id) {
		return service.getStock(id);
	}
	@RequestMapping(method = RequestMethod.DELETE,value = "/products/delete/name/{productName}")
	void deleteProductByName(@PathVariable String productName) {
		service.deleteProductByName(productName);
	}
	
}
